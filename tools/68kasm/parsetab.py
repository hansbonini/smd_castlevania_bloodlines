
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'mainBINARY COLON COMMA COMMENT CONDITIONAL_INSTRUCTION DECIMAL DIV DOLLAR DOT HASH HEXADECIMAL ID INDENT INSTRUCTION LABEL LPAR MINUS MULT OCTAL PLUS REFERENCE REGISTER RPAR SIZE STRINGmain : empty\n                | label\n                | main labellabel : label statement\n                 | LABELstatement : instruction operation\n                     | instruction datasize operationoperation : addressing_mode\n                     | addressing_mode addressing_modeaddressing_mode : addressing_mode_none\n                           | addressing_mode_direct\n                           | addressing_mode_indirect\n                           | addressing_mode_indirectpost\n                           | addressing_mode_indirectpre\n                           | addressing_mode_indirectdisplacement\n                           | addressing_mode_indirectindex\n                           | addressing_mode_absoluteshort\n                           | addressing_mode_absolutelong\n                           | addressing_mode_immediate\n                           | addressing_mode_rangeaddressing_mode_none : emptyaddressing_mode_direct : registeraddressing_mode_indirect : LPAR register RPAR\n                                    | LPAR absolute RPARaddressing_mode_indirectpost : LPAR register RPAR PLUSaddressing_mode_indirectpre : MINUS LPAR register RPARaddressing_mode_indirectdisplacement : absolute LPAR register RPARaddressing_mode_indirectindex : absolute LPAR register register RPARaddressing_mode_absoluteshort : absolute SIZEaddressing_mode_absolutelong : absoluteaddressing_mode_immediate : immediateaddressing_mode_range : register MINUS register DIV register\n                                 | register MINUS register DIV register MINUS registerinstruction : INSTRUCTION\n                       | CONDITIONAL_INSTRUCTIONdatasize : SIZEregister : REGISTERimmediate : HASH ID\n                     | HASH STRING\n                     | HASH BINARY\n                     | HASH DECIMAL\n                     | HASH OCTAL\n                     | HASH HEXADECIMALabsolute : ID\n                    | BINARY\n                    | DECIMAL\n                    | OCTAL\n                    | HEXADECIMALempty : '
    
_lr_action_items = {'LABEL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,38,39,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[4,4,-1,-2,-5,-3,-4,-49,-34,-35,-6,-49,-8,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-31,-37,-44,-45,-46,-47,-48,-7,-9,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,38,39,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[-49,0,-1,-2,-5,-3,-4,-49,-34,-35,-6,-49,-8,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-31,-37,-44,-45,-46,-47,-48,-7,-9,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'INSTRUCTION':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,38,39,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[8,-5,8,-4,-49,-34,-35,-6,-49,-8,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-31,-37,-44,-45,-46,-47,-48,-7,-9,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'CONDITIONAL_INSTRUCTION':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,38,39,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[9,-5,9,-4,-49,-34,-35,-6,-49,-8,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-31,-37,-44,-45,-46,-47,-48,-7,-9,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'SIZE':([7,8,9,28,32,33,34,35,36,],[13,-34,-35,44,-44,-45,-46,-47,-48,]),'LPAR':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[27,-34,-35,27,27,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,43,45,-31,-37,-44,-45,-46,-47,-48,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'MINUS':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[29,-34,-35,29,29,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,40,-30,-31,-37,-44,-45,-46,-47,-48,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,64,-28,-33,]),'REGISTER':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,40,43,44,45,46,47,48,49,50,51,53,54,55,57,58,60,61,62,63,64,65,],[31,-34,-35,31,31,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,31,-30,-31,-37,-44,-45,-46,-47,-48,31,31,-29,31,-38,-39,-40,-41,-42,-43,-23,-24,31,31,-25,-27,-26,-32,-28,31,-33,]),'ID':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[32,-34,-35,32,32,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,32,-30,-31,-37,-44,-45,-46,-47,-48,46,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'BINARY':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[33,-34,-35,33,33,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,33,-30,-31,-37,-44,-45,-46,-47,-48,48,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'DECIMAL':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[34,-34,-35,34,34,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,34,-30,-31,-37,-44,-45,-46,-47,-48,49,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'OCTAL':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[35,-34,-35,35,35,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,35,-30,-31,-37,-44,-45,-46,-47,-48,50,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'HEXADECIMAL':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[36,-34,-35,36,36,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,36,-30,-31,-37,-44,-45,-46,-47,-48,51,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'HASH':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,44,46,47,48,49,50,51,53,54,58,60,61,62,63,65,],[37,-34,-35,37,37,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-31,-37,-44,-45,-46,-47,-48,-29,-38,-39,-40,-41,-42,-43,-23,-24,-25,-27,-26,-32,-28,-33,]),'RPAR':([31,32,33,34,35,36,41,42,55,56,59,],[-37,-44,-45,-46,-47,-48,53,54,60,61,63,]),'DIV':([31,52,],[-37,57,]),'STRING':([37,],[47,]),'PLUS':([53,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'empty':([0,7,11,12,],[2,25,25,25,]),'label':([0,1,],[3,5,]),'statement':([3,5,],[6,6,]),'instruction':([3,5,],[7,7,]),'operation':([7,11,],[10,38,]),'datasize':([7,],[11,]),'addressing_mode':([7,11,12,],[12,12,39,]),'addressing_mode_none':([7,11,12,],[14,14,14,]),'addressing_mode_direct':([7,11,12,],[15,15,15,]),'addressing_mode_indirect':([7,11,12,],[16,16,16,]),'addressing_mode_indirectpost':([7,11,12,],[17,17,17,]),'addressing_mode_indirectpre':([7,11,12,],[18,18,18,]),'addressing_mode_indirectdisplacement':([7,11,12,],[19,19,19,]),'addressing_mode_indirectindex':([7,11,12,],[20,20,20,]),'addressing_mode_absoluteshort':([7,11,12,],[21,21,21,]),'addressing_mode_absolutelong':([7,11,12,],[22,22,22,]),'addressing_mode_immediate':([7,11,12,],[23,23,23,]),'addressing_mode_range':([7,11,12,],[24,24,24,]),'register':([7,11,12,27,40,43,45,55,57,64,],[26,26,26,41,52,55,56,59,62,65,]),'absolute':([7,11,12,27,],[28,28,28,42,]),'immediate':([7,11,12,],[30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> empty','main',1,'p_main','68kasm.py',320),
  ('main -> label','main',1,'p_main','68kasm.py',321),
  ('main -> main label','main',2,'p_main','68kasm.py',322),
  ('label -> label statement','label',2,'p_label','68kasm.py',332),
  ('label -> LABEL','label',1,'p_label','68kasm.py',333),
  ('statement -> instruction operation','statement',2,'p_statement','68kasm.py',347),
  ('statement -> instruction datasize operation','statement',3,'p_statement','68kasm.py',348),
  ('operation -> addressing_mode','operation',1,'p_operation','68kasm.py',369),
  ('operation -> addressing_mode addressing_mode','operation',2,'p_operation','68kasm.py',370),
  ('addressing_mode -> addressing_mode_none','addressing_mode',1,'p_addressing_mode','68kasm.py',379),
  ('addressing_mode -> addressing_mode_direct','addressing_mode',1,'p_addressing_mode','68kasm.py',380),
  ('addressing_mode -> addressing_mode_indirect','addressing_mode',1,'p_addressing_mode','68kasm.py',381),
  ('addressing_mode -> addressing_mode_indirectpost','addressing_mode',1,'p_addressing_mode','68kasm.py',382),
  ('addressing_mode -> addressing_mode_indirectpre','addressing_mode',1,'p_addressing_mode','68kasm.py',383),
  ('addressing_mode -> addressing_mode_indirectdisplacement','addressing_mode',1,'p_addressing_mode','68kasm.py',384),
  ('addressing_mode -> addressing_mode_indirectindex','addressing_mode',1,'p_addressing_mode','68kasm.py',385),
  ('addressing_mode -> addressing_mode_absoluteshort','addressing_mode',1,'p_addressing_mode','68kasm.py',386),
  ('addressing_mode -> addressing_mode_absolutelong','addressing_mode',1,'p_addressing_mode','68kasm.py',387),
  ('addressing_mode -> addressing_mode_immediate','addressing_mode',1,'p_addressing_mode','68kasm.py',388),
  ('addressing_mode -> addressing_mode_range','addressing_mode',1,'p_addressing_mode','68kasm.py',389),
  ('addressing_mode_none -> empty','addressing_mode_none',1,'p_addressing_mode_none','68kasm.py',394),
  ('addressing_mode_direct -> register','addressing_mode_direct',1,'p_addressing_mode_direct','68kasm.py',401),
  ('addressing_mode_indirect -> LPAR register RPAR','addressing_mode_indirect',3,'p_addressing_mode_indirect','68kasm.py',408),
  ('addressing_mode_indirect -> LPAR absolute RPAR','addressing_mode_indirect',3,'p_addressing_mode_indirect','68kasm.py',409),
  ('addressing_mode_indirectpost -> LPAR register RPAR PLUS','addressing_mode_indirectpost',4,'p_addressing_mode_indirectpost','68kasm.py',413),
  ('addressing_mode_indirectpre -> MINUS LPAR register RPAR','addressing_mode_indirectpre',4,'p_addressing_mode_indirectpre','68kasm.py',417),
  ('addressing_mode_indirectdisplacement -> absolute LPAR register RPAR','addressing_mode_indirectdisplacement',4,'p_addressing_mode_indirectdisplacement','68kasm.py',421),
  ('addressing_mode_indirectindex -> absolute LPAR register register RPAR','addressing_mode_indirectindex',5,'p_addressing_mode_indirectindex','68kasm.py',426),
  ('addressing_mode_absoluteshort -> absolute SIZE','addressing_mode_absoluteshort',2,'p_addressing_mode_absoluteshort','68kasm.py',430),
  ('addressing_mode_absolutelong -> absolute','addressing_mode_absolutelong',1,'p_addressing_mode_absolutelong','68kasm.py',434),
  ('addressing_mode_immediate -> immediate','addressing_mode_immediate',1,'p_addressing_mode_immediate','68kasm.py',438),
  ('addressing_mode_range -> register MINUS register DIV register','addressing_mode_range',5,'p_addressing_mode_range','68kasm.py',442),
  ('addressing_mode_range -> register MINUS register DIV register MINUS register','addressing_mode_range',7,'p_addressing_mode_range','68kasm.py',443),
  ('instruction -> INSTRUCTION','instruction',1,'p_instruction','68kasm.py',450),
  ('instruction -> CONDITIONAL_INSTRUCTION','instruction',1,'p_instruction','68kasm.py',451),
  ('datasize -> SIZE','datasize',1,'p_datasize','68kasm.py',455),
  ('register -> REGISTER','register',1,'p_register','68kasm.py',459),
  ('immediate -> HASH ID','immediate',2,'p_immediate','68kasm.py',463),
  ('immediate -> HASH STRING','immediate',2,'p_immediate','68kasm.py',464),
  ('immediate -> HASH BINARY','immediate',2,'p_immediate','68kasm.py',465),
  ('immediate -> HASH DECIMAL','immediate',2,'p_immediate','68kasm.py',466),
  ('immediate -> HASH OCTAL','immediate',2,'p_immediate','68kasm.py',467),
  ('immediate -> HASH HEXADECIMAL','immediate',2,'p_immediate','68kasm.py',468),
  ('absolute -> ID','absolute',1,'p_absolute','68kasm.py',472),
  ('absolute -> BINARY','absolute',1,'p_absolute','68kasm.py',473),
  ('absolute -> DECIMAL','absolute',1,'p_absolute','68kasm.py',474),
  ('absolute -> OCTAL','absolute',1,'p_absolute','68kasm.py',475),
  ('absolute -> HEXADECIMAL','absolute',1,'p_absolute','68kasm.py',476),
  ('empty -> <empty>','empty',0,'p_empty','68kasm.py',479),
]
